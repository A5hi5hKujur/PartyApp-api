# Generated by Django 4.0.1 on 2022-01-16 09:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('end_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('theme', models.CharField(choices=[('Anniversary', 'Anniversary'), ('Birthday', 'Birthday'), ('Casual', 'Casual'), ('Formal', 'Formal')], default='Casual', max_length=50)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('total_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('total_purchase', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(blank=True, choices=[('P', 'Past'), ('O', 'Ongoing'), ('U', 'Upcoming')], max_length=1)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='host_of', to='party.participant')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.party'),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('beer', 'Beer'), ('board-game', 'Board Game'), ('cake', 'Cake'), ('card', 'Cards'), ('cup', 'Cups'), ('decoration', 'Decorations'), ('food', 'Food'), ('fruit-vegetable', 'Fruits and Vegetables'), ('celebration-item', 'Celebration Aid'), ('pizza', 'Pizza'), ('soft-drink', 'Soft Drink'), ('video-game', 'Video Game'), ('water', 'Water'), ('wine', 'Wine')], max_length=50)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('priority', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('purchased', models.BooleanField(blank=True, default=False)),
                ('essential', models.BooleanField(blank=True, default=False)),
                ('for_all', models.BooleanField(blank=True, default=True)),
                ('consumers', models.ManyToManyField(to='party.Participant')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.party')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
